{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css","App.module.css"],"names":["module","exports","ContactList","contacts","onDeleteBtn","className","s","list","map","contact","item","text","name","number","deleteBtn","type","id","onClick","ContactForm","nameId","uuid","numberId","state","handleChange","e","console","log","target","value","setState","handleSubmit","preventDefault","obj","props","addNewContacts","resetForm","form","onSubmit","this","label","htmlFor","input","onChange","pattern","title","placeholder","required","maxLength","addBtn","Component","Filter","App","filter","data","prevState","some","toLowerCase","includes","alert","deleteContact","prev","filterName","currentTarget","getFilteredContacts","nameToLowerCase","localContacts","localStorage","getItem","parseContacts","JSON","parse","prevProps","products","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44134879.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__U4iJS\",\"input\":\"Filter_input__2y3FZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1sGQV\",\"label\":\"ContactForm_label__iR-WJ\",\"input\":\"ContactForm_input__1B0Oo\",\"addBtn\":\"ContactForm_addBtn__28FP4\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteBtn }) => {\r\n  return (\r\n    <ul className={s.list}>{contacts.map( contact => {\r\n      return (\r\n        <li key={contact.id} className={s.item}>\r\n          <p className={s.text}>{contact.name}</p>\r\n          <p className={s.text}>{contact.number}</p>\r\n          <button className={s.deleteBtn} type=\"button\" id={contact.id} onClick={() => onDeleteBtn(contact.id)} >Delete ‚ùå</button>\r\n        </li>);\r\n      })}\r\n    </ul>\r\n  )\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteBtn: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;","import {Component} from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  // generate unique Id\r\n  nameId = uuid();\r\n  numberId = uuid();\r\n\r\n  state = {\r\n      name: '',\r\n      number: ''\r\n  };\r\n\r\n    componentDidMount() {\r\n    \r\n  };\r\n\r\n  componentDidUpdate() { }\r\n  \r\n  componentWillUnmount(){}\r\n\r\n  //writing data from input\r\n  handleChange = (e) => {\r\n    console.log(e.target.value)\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  };\r\n\r\n  //collecting and forwarding data to obj\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n    const obj = {\r\n      id: uuid(),\r\n      name: this.state.name,\r\n      number: this.state.number\r\n    };\r\n    \r\n    this.setState({ obj});\r\n    this.props.addNewContacts(obj);\r\n    this.resetForm();\r\n   };\r\n\r\n  //clears inputs. Used in handleSubmit\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label\r\n          className={s.label}\r\n          htmlFor={this.nameId}>üë§ Name\r\n          <input\r\n            className={s.input}\r\n            id={this.nameId}\r\n            type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\r\n            title=\"write the name with the use of letters, apostrophe, dash and spaces. For example, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc\"\r\n            placeholder=\". . .\"\r\n            required\r\n            />\r\n          </label>\r\n\r\n        <label\r\n          className={s.label}\r\n          htmlFor={this.numberId}>‚òéÔ∏è Number\r\n          <input\r\n            className={s.input}\r\n              id={this.numberId}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              maxLength=\"14\"\r\n            title=\"use the numeric format for the phone number\"\r\n            placeholder=\". . .\"\r\n              required\r\n            />\r\n          </label>\r\n        <button\r\n          className={s.addBtn}\r\n          type=\"submit\"\r\n          onSubmit={this.handleSubmit}>\r\n          Add contact\r\n        </button>\r\n\r\n        </form>\r\n\r\n    )\r\n  }\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <>\r\n      <label className={s.label}>üîé Find by name \r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  )\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import s from './App.module.css';\r\nimport { Component } from 'react';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n      contacts: [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n  ],\r\n    filter: '',\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  // rendering the data from localStorage\r\n  componentDidMount() {\r\n    const localContacts = localStorage.getItem('contacts');\r\n    const parseContacts = JSON.parse(localContacts);\r\n    if (parseContacts) {\r\n        this.setState({ contacts: parseContacts });\r\n    }\r\n  };\r\n\r\n  // writing the data to localStorage\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.products) {\r\n  localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\r\n}};\r\n\r\n  componentWillUnmount() {\r\n    \r\n  };\r\n\r\n  addNewContacts = data => {\r\n    this.setState((prevState) => {\r\n      if (prevState.contacts.some(contact => contact.name.toLowerCase().includes(data.name.toLowerCase()))) {\r\n        return alert(`${data.name} is already in your contacts`)\r\n      }\r\n      return {\r\n        contacts: [data, ...prevState.contacts]\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  deleteContact = id => {\r\n    this.setState(prev => ({\r\n      contacts: prev.contacts.filter(contact => contact.id !== id),\r\n    }))\r\n  };\r\n\r\n  filterName = e => {\r\n    this.setState({\r\n      filter: e.currentTarget.value,\r\n    })\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const nameToLowerCase = filter.toLowerCase();\r\n\r\nreturn contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(nameToLowerCase)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const filteredContacts = this.getFilteredContacts();\r\n    \r\n    return (\r\n      <div className={s.App}>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm addNewContacts={this.addNewContacts}\r\n        />\r\n\r\n          <h2>Contacts</h2>\r\n            <Filter value={this.state.filter} onChange={ this.filterName}/>\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onDeleteBtn={this.deleteContact}\r\n            />\r\n\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2I8En\",\"item\":\"ContactList_item__sMEHE\",\"text\":\"ContactList_text__2wBc0\",\"deleteBtn\":\"ContactList_deleteBtn__1sAkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2dalY\",\"title\":\"App_title__3AG_v\"};"],"sourceRoot":""}